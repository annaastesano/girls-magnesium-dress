// Using comment toggles to allow easily switching these on or off globally

@mixin print-styles() {
  @media /**/ print /*/ screen /**/ {
    @content;
  }
}

@mixin screen-styles() {
  @media /** / print /*/ screen /**/ {
    @content;
  }
}

@mixin dmb-responsive($property-name, $mobile-val, $desktop-val) {
  #{$property-name}: #{$mobile-val}px;

  @include bp(m) {
    #{$property-name}: #{$desktop-val}px;
  }
}

@mixin default-focus-outline {
  outline-color: Highlight;
  outline-style: solid;
  outline-width: 5px;

  @media (-webkit-min-device-pixel-ratio: 0) {
    outline-color: -webkit-focus-ring-color;
    outline-style: auto;
  }
}




////////////////////////////////

// MEDIA QUERIES
@mixin dmb-mq($from: null, $until: null, $only: null) {
  // A mixin for applying responsive properties, takes in device names (tablet, desktop, wide)
  // then uses corresponsing values from $dmb-breakpoints map in ./_variables.scss, or pixel values.
  //
  // Examples:
  // for $dmb-breakpoints: (tablet: 600px, desktop: 1024px, wide: 1440px)
  // @include mq($from: tablet) or @include mq(tablet): 600px and up
  // @include mq($from: 430px) or @include mq(430px): 430px and up
  // @include mq($until: wide): less than 1440px (up to 1439px)
  // @include mq($from: 200px,$until: tablet) or @include mq(200px,tablet): 200px until 599px (200px <= x < 600px)
  // @include mq($only: desktop): 1024px until 1440px (1024px <= x < 1439px)

  // sass-lint:disable-block brace-style

  // ONLY
  @if $only { // if $only given, ignore user $from and $until values and set these
    // Map device names to breakpoint values in ./_variables.scss for $from and $until
    @if $only == 'tablet' {
      $from: map-get($dmb-breakpoints, tablet);
      $until: map-get($dmb-breakpoints, desktop);
    }
    @else if $only == 'desktop' {
      $from: map-get($dmb-breakpoints, desktop);
      $until: map-get($dmb-breakpoints, wide);
    }
  }
  @else {
    // FROM
    // Map device names to breakpoint values in ./_variables.scss for $from
    @if $from == 'tablet' {
      $from: map-get($dmb-breakpoints, tablet);
    }
    @else if $from == 'desktop' {
      $from: map-get($dmb-breakpoints, desktop);
    }
    @else if $from == 'wide' {
      $from: map-get($dmb-breakpoints, wide);
    }

    // Map device names to breakpoint values in ./_variables.scss for $until
    @if $until == 'tablet' {
      $until: map-get($dmb-breakpoints, tablet);
    }
    @else if $until == 'desktop' {
      $until: map-get($dmb-breakpoints, desktop);
    }
    @else if $until == 'wide' {
      $until: map-get($dmb-breakpoints, wide);
    }
  }

  @if $from {
    @if $until { // if both $from and $until given (by user or due to $only being given)
      @media (min-width: $from) and (max-width: #{$until - 1px}) { @content; }
    }
    @else { // if only $from given
      @media (min-width: $from) { @content; }
    }
  }
  @else if $until { // if only $until given
    @media (max-width: #{$until - 1px}) { @content; }
  }
}


// RESPONSIVE PROPERTIES
@mixin dmb-resp-prop($property,$mob,$tab: null,$desk: null,$wide: null) {
  // Create responsive property values by specifying the property name, the mobile, tablet,
  // desktop and wide values. Only mobile value and one other value are necessary.
  //
  // [Should be used instead of dmb-responsive mixin from now on]
  //
  // Example:
  // @include dmb-resp-prop(margin-bottom, 20px, 40px, 60px, 80px)
  // will give the item a bottom margin of 20px, 40px, 60px and 80px at mobile, tablet, desktop and wide respectively.

  #{$property}: $mob;

  @if $tab {
    @include dmb-mq($from: tablet) {
      #{$property}: $tab;
    }
  }

  @if $desk {
    @include dmb-mq($from: desktop) {
      #{$property}: $desk;
    }
  }

  @if $wide {
    @include dmb-mq($from: wide) {
      #{$property}: $wide;
    }
  }
}
