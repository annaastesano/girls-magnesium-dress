// Using comment toggles to allow easily switching these on or off globally

@mixin print-styles() {
  @media /**/ print /*/ screen /**/ {
    @content;
  }
}


@mixin screen-styles() {
  @media /** / print /*/ screen /**/ {
    @content;
  }
}


@mixin dmb-responsive($property-name, $mobile-val, $desktop-val) {
  #{$property-name}: #{$mobile-val}px;

  @include bp(m) {
    #{$property-name}: #{$desktop-val}px;
  }
}

@mixin default-focus-outline {
  outline-color: Highlight;
  outline-style: solid;
  outline-width: 5px;

  @media (-webkit-min-device-pixel-ratio: 0) {
    outline-color: -webkit-focus-ring-color;
    outline-style: auto;
  }
}

////////////////////////////////

// MEDIA QUERY MIXIN
// A mixin for applying responsive properties
//
// Examples:
// @include mq($from: tablet): 600px and up
// @include mq($from: 430px): 430px and up
// @include mq($until: wide): less than 1440px (up to 1439px)
// @include mq($from: 200px, $until: tablet): 200px until 599px (200px <= x < 600px)
// @include mq($only: desktop): 1024px until 1440px (1024px <= x < 1439px)
@mixin dmb-mq($from: null, $until: null, $only: null) {
  // sass-lint:disable-block brace-style
  // ONLY
  @if $only { // if $only given, ignore user $from and $until values and set these
    // Map device names to breakpoint values in ./_variables.scss for $from and $until
    @if $only == 'tablet' {
      $from: $bp-tablet;
      $until: $bp-desktop;
    }
    @else if $only == 'desktop' {
      $from: $bp-desktop;
      $until: $bp-wide;
    }
  }
  @else {
    // FROM
    // Map device names to breakpoint values in ./_variables.scss for $from
    @if $from == 'tablet' {
      $from: $bp-tablet;
    }
    @else if $from == 'desktop' {
      $from: $bp-desktop;
    }
    @else if $from == 'wide' {
      $from: $bp-wide;
    }

    // Map device names to breakpoint values in ./_variables.scss for $until
    @if $until == 'tablet' {
      $until: $bp-tablet;
    }
    @else if $until == 'desktop' {
      $until: $bp-desktop;
    }
    @else if $until == 'wide' {
      $until: $bp-wide;
    }
  }

  @if $from {
    @if $until { // if both $from and $until given (by user or due to $only being given)
      @media (min-width: $from) and (max-width: #{$until - 1px}) { @content; }
    }
    @else { // if only $from given
      @media (min-width: $from) { @content; }
    }
  }
  @else if $until { // if only $until given
    @media (max-width: #{$until - 1px}) { @content; }
  }
}

// RESPONSIVE PROPERTY MIXIN
// Create responsive property values by specifying the property name, the mobile, tablet,
// desktop and wide values. Only mobile value and one other value are necessary.
// [Should be used instead of dmb-responsive mixin from now on].
//
// Examples:
// @include dmb-resp-prob(margin-bottom, 20px, 40px, 60px)

@mixin dmb-resp-prop(
  $property,
  $mob,
  $tab: null,
  $desk: null,
  $wide: null
) {
  #{$property}: $mob;

  @if $tab {
    @include mq($from: tablet) {
      #{$property}: $tab;
    }
  }

  @if $desk {
    @include mq($from: desktop) {
      #{$property}: $desk;
    }
  }

  @if $wide {
    @include mq($from: tablet) {
      #{$property}: $wide;
    }
  }
}
